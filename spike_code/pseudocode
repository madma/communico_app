user story: aau i want to submit a link to an article and save it to my articles

client-side
submit form with rawArticleLink
X  POST rawArticleLink and user._id to /api/articles

server-side
articlesUsersController
X  with scraper helper, generate and return the article canonical link from the raw link
  articlesController
X    search the articles collection to see if an article doc with canonical link exists
      if article exists
X       update and save the article's addedBy=[users] with the user._id
X          then trigger update and save the user's articles=[articles] with article._id
X            then send a response to the client
      else if the article does not exist
X        with scraper helper, generate an article object from the canonical link
X        set the article objects addedBy property to an array containing the user._id
X          then create the article doc
X            then trigger update and save the user's articles=[articles] with article._id
X              then send a response to the client


user story: aau i want to highlight and save specific passages in an article

1. test highlight schema
  add a highlight to an article's text
    user highlights some text
      get start char
      get end char
      article.text.substring(startChar, endChar);
      highlight = {};
      highlight.startChar = startChar;
      highlight.endChar = endChar;
      highlight.addedBy = user._id;
      article.highlights.push(highlight);
      article.save();
      user.articles[thisOne].highlights.push(highlight);
      user.save();
  return the highlight

in angular, listen for a highlight
on hightlight do:
  popup a tooltip
  confirm highlight save
  on confirm:
    get start char
    get end char
    article.text.substring(startChar, endChar);
    highlight = {};
    highlight.startChar = startChar;
    highlight.endChar = endChar;
    highlight.addedBy = user._id;
    user.articles[thisOne].highlights.push(highlight);
    user.save();
      trigger update associated Article resource with highlight
    render the highlight:
      apply a class to the selected text

refactor anonymous modal controller into named controller in order to more easily store article annotation properties (highlights, comments, etc.)

return the containing element of the selection as a string
  selection.getRangeAt(0).commonAncestorContainer.innerHTML
  http://stackoverflow.com/questions/5222814/window-getselection-return-html
    google: "window getselection including html"

    TODO: limit highlight feature to text that is wholly contained in one node (i.e. selected text is all within one paragraph)
    var selection = $window.getSelection();
    var range = selection.getRangeAt(0);
    var newNode = $document.createElement("MARK"); // <mark> is an HTML5 element that highlights text, i.e. applies background-color: yellow, color: black by default
    range.surroundContents(newNode);






